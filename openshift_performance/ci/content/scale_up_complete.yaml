---
- hosts: localhost
  remote_user: root
  tasks:
# Starting in OCP 4.1, we need to pass in the command line when running the playbook 3 variables:
# - api_url  (obtained from the kubeconfig)
# - login_username (kubeadim or another user created)
# - login_passwd
# Sample command to run this playbook:
#   ansible-playbook -vv -e api_url="https://api.walid0509204a.perf-testing.devcluster.openshift.com:6443" -e login_username="kubeadmin" -e login_passwd="<kubeadmin-passwd>" scale_up_complete.yaml 2>&1 | tee /root/output_scale_up_complete-$(date +%Y-%m-%d-%H%M).log
#
    - name: Give the test user from command line cluster-admin
      shell: oc adm policy add-cluster-role-to-user cluster-admin {{ login_username }}

    - name: Run cluster loader to create all projects
      args: 
         chdir: /root/svt/openshift_scalability
      shell: > 
         python -u /root/svt/openshift_scalability/cluster-loader.py 
         -f /root/svt/openshift_scalability/config/all-quickstarts-no-limits.yaml
         > /tmp/cluster_loader.out 2>/tmp/cluster_loader.err

# Starting in OCP 4.1, we pass the api_url, login_username, and login_passwd to the updated check_app.py script:
    - name: Wait for all applications to be ready
      shell: > 
         python -u /root/svt/openshift_performance/ose3_perf/scripts/check_app.py
         -a "{{ api_url }}"
         -u "{{ login_username }}"
         -p "{{ login_passwd }}"
         -n "cakephp-mysql0:cakephp-mysql-example dancer-mysql0:dancer-mysql-example eap71-mysql0:eap-app rails-postgresql0:rails-postgresql-example django-postgresql0:django-psql-example nodejs-mongodb0:nodejs-mongodb-example tomcat8-mongodb0:jws-app"
         > /tmp/check_app.out 2>/tmp/check_app.err

    - name: Scale all applications to zero
      shell: oc scale --replicas=0 -n {{ item.namespace }} dc/{{ item.dc }}
      with_items:
         - { namespace: 'cakephp-mysql0', dc: 'cakephp-mysql-example'}  
         - { namespace: 'dancer-mysql0', dc: 'dancer-mysql-example'}
         - { namespace: 'eap71-mysql0', dc: 'eap-app'}
         - { namespace: 'rails-postgresql0', dc: 'rails-postgresql-example'}
         - { namespace: 'django-postgresql0', dc: 'django-psql-example'}
         - { namespace: 'nodejs-mongodb0', dc: 'nodejs-mongodb-example'}
         - { namespace: 'tomcat8-mongodb0', dc: 'jws-app'}

    - name: Run scale-up test for cakephp
      shell: >
         python -u /root/svt/openshift_performance/ose3_perf/scripts/scale_test.py
         -m "{{ api_url }}"
         -u "{{ login_username }}" 
         -p "{{ login_passwd }}" 
         -n cakephp-mysql0 
         -d cakephp-mysql-example 
         -r 100
         -s 20 
         -w 10 
         -z
         -0
         > /tmp/scale_test.out 2>/tmp/scale_test.err

    - name: Run scale-up test for dancer
      shell: >
         python -u /root/svt/openshift_performance/ose3_perf/scripts/scale_test.py
         -m "{{ api_url }}"
         -u "{{ login_username }}"
         -p "{{ login_passwd }}"
         -n dancer-mysql0
         -d dancer-mysql-example
         -r 40
         -s 20
         -w 10
         -z
         -0
         >> /tmp/scale_test.out 2>/tmp/scale_test.err

    - name: Run scale-up test for eap-app
      shell: >
         python -u /root/svt/openshift_performance/ose3_perf/scripts/scale_test.py
         -m "{{ api_url }}"
         -u "{{ login_username }}"
         -p "{{ login_passwd }}"
         -n eap71-mysql0
         -d eap-app
         -r 20
         -s 10
         -w 10
         -z
         -0
         >> /tmp/scale_test.out 2>/tmp/scale_test.err

    - name: Run scale-up test for ruby rails  
      shell: >
         python -u /root/svt/openshift_performance/ose3_perf/scripts/scale_test.py
         -m "{{ api_url }}"
         -u "{{ login_username }}" 
         -p "{{ login_passwd }}" 
         -n rails-postgresql0
         -d rails-postgresql-example 
         -r 20 
         -s 10
         -w 10 
         -z
         -0
         >> /tmp/scale_test.out 2>/tmp/scale_test.err

    - name: Run scale-up test for django  
      shell: >
         python -u /root/svt/openshift_performance/ose3_perf/scripts/scale_test.py
         -m "{{ api_url }}"
         -u "{{ login_username }}" 
         -p "{{ login_passwd }}" 
         -n django-postgresql0
         -d django-psql-example
         -r 100 
         -s 20 
         -w 10 
         -z
         -0
         >> /tmp/scale_test.out 2>/tmp/scale_test.err


    - name: Run scale-up test for nodejs  
      shell: >
         python -u /root/svt/openshift_performance/ose3_perf/scripts/scale_test.py
         -m "{{ api_url }}"
         -u "{{ login_username }}" 
         -p "{{ login_passwd }}" 
         -n nodejs-mongodb0
         -d nodejs-mongodb-example
         -r 200
         -s 20 
         -w 10 
         -z
         -0
         >> /tmp/scale_test.out 2>/tmp/scale_test.err

    - name: Run scale-up test for tomcat jws-app
      shell: >
         python -u /root/svt/openshift_performance/ose3_perf/scripts/scale_test.py
         -m "{{ api_url }}"
         -u "{{ login_username }}"
         -p "{{ login_passwd }}"
         -n tomcat8-mongodb0
         -d jws-app
         -r 20
         -s 10
         -w 10
         -z
         -0
         >> /tmp/scale_test.out 2>/tmp/scale_test.err

    - name: Delete test projects
      shell: oc delete project -l purpose=test

    - name: Fetch cluster_loader output
      fetch: src={{ item }} dest=.
      with_items:
       - "/tmp/cluster_loader.out"
       - "/tmp/cluster_loader.err"
       - "/tmp/check_app.out"
       - "/tmp/check_app.err"
       - "/tmp/scale_test.out"
       - "/tmp/scale_test.err"

