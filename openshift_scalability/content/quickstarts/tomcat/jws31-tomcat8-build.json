{
    "apiVersion": "template.openshift.io/v1",
    "kind": "Template",
    "labels": {
        "template": "jws31-tomcat8-mongodb-s2i",
        "xpaas": "1.4.16"
    },
    "message": "A new JWS application for Apache Tomcat 8 (using MongoDB) has been created in your project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}. For accessing the MongoDB database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD} (Admin password is \"${DB_ADMIN_PASSWORD}\"). Please be sure to create the secret named \"${JWS_HTTPS_SECRET}\" containing the ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.",
    "metadata": {
        "annotations": {
            "description": "Application template for JWS MongoDB applications built using S2I.",
            "iconClass": "icon-rh-tomcat",
            "openshift.io/display-name": "JBoss Web Server 3.1 Apache Tomcat 8 + MongoDB (Ephemeral with https)",
            "openshift.io/provider-display-name": "Red Hat, Inc.",
            "samples.operator.openshift.io/version": "4.0.0-alpha1-69362431c",
            "tags": "tomcat,tomcat8,java,jboss,hidden",
            "version": "1.4.16"
        },
        "creationTimestamp": "2019-02-20T11:29:58Z",
        "labels": {
            "samples.operator.openshift.io/managed": "true"
        },
        "name": "jws31-tomcat8-mongodb-s2i",
        "namespace": "openshift",
        "resourceVersion": "13400",
        "selfLink": "/apis/template.openshift.io/v1/namespaces/openshift/templates/jws31-tomcat8-mongodb-s2i",
        "uid": "da71e449-3502-11e9-8aaf-0a580a81001e"
    },
    "objects": [
        {
            "apiVersion": "v1",
            "kind": "ImageStream",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "BuildConfig",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${APPLICATION_NAME}:latest"
                    }
                },
                "source": {
                    "contextDir": "${CONTEXT_DIR}",
                    "git": {
                        "ref": "${SOURCE_REPOSITORY_REF}",
                        "uri": "${SOURCE_REPOSITORY_URL}"
                    },
                    "type": "Git"
                },
                "strategy": {
                    "sourceStrategy": {
                        "env": [
                            {
                                "name": "MAVEN_MIRROR_URL",
                                "value": "${MAVEN_MIRROR_URL}"
                            },
                            {
                                "name": "ARTIFACT_DIR",
                                "value": "${ARTIFACT_DIR}"
                            }
                        ],
                        "forcePull": true,
                        "from": {
                            "kind": "ImageStreamTag",
                            "name": "jboss-webserver31-tomcat8-openshift:1.2",
                            "namespace": "${IMAGE_STREAM_NAMESPACE}"
                        }
                    },
                    "type": "Source"
                },
                "triggers": [
                    {
                        "github": {
                            "secret": "${GITHUB_WEBHOOK_SECRET}"
                        },
                        "type": "GitHub"
                    },
                    {
                        "generic": {
                            "secret": "${GENERIC_WEBHOOK_SECRET}"
                        },
                        "type": "Generic"
                    },
                    {
                        "imageChange": {},
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        }
    ],
    "parameters": [
        {
            "description": "The name for the application.",
            "displayName": "Application Name",
            "name": "APPLICATION_NAME",
            "required": true,
            "value": "jws-app"
        },
        {
            "description": "Custom hostname for http service route.  Leave blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e",
            "displayName": "Custom http Route Hostname",
            "name": "HOSTNAME_HTTP"
        },
        {
            "description": "Custom hostname for https service route.  Leave blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e",
            "displayName": "Custom https Route Hostname",
            "name": "HOSTNAME_HTTPS"
        },
        {
            "description": "Git source URI for application",
            "displayName": "Git Repository URL",
            "name": "SOURCE_REPOSITORY_URL",
            "required": true,
            "value": "https://github.com/jboss-openshift/openshift-quickstarts"
        },
        {
            "description": "Git branch/tag reference",
            "displayName": "Git Reference",
            "name": "SOURCE_REPOSITORY_REF",
            "value": "1.2"
        },
        {
            "description": "Path within Git project to build; empty for root project directory.",
            "displayName": "Context Directory",
            "name": "CONTEXT_DIR",
            "value": "todolist/todolist-mongodb"
        },
        {
            "description": "Database name",
            "displayName": "Database Name",
            "name": "DB_DATABASE",
            "required": true,
            "value": "root"
        },
        {
            "description": "The name of the secret containing the certificate files",
            "displayName": "Secret Name",
            "name": "JWS_HTTPS_SECRET",
            "required": true,
            "value": "jws-app-secret"
        },
        {
            "description": "The name of the certificate file within the secret",
            "displayName": "Certificate Name",
            "name": "JWS_HTTPS_CERTIFICATE",
            "value": "server.crt"
        },
        {
            "description": "The name of the certificate key file within the secret",
            "displayName": "Certificate Key Name",
            "name": "JWS_HTTPS_CERTIFICATE_KEY",
            "value": "server.key"
        },
        {
            "description": "The certificate password",
            "displayName": "Certificate Password",
            "name": "JWS_HTTPS_CERTIFICATE_PASSWORD"
        },
        {
            "description": "Database user name",
            "displayName": "Database Username",
            "from": "user[a-zA-Z0-9]{3}",
            "generate": "expression",
            "name": "DB_USERNAME",
            "required": true
        },
        {
            "description": "Database user password",
            "displayName": "Database Password",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "DB_PASSWORD",
            "required": true
        },
        {
            "description": "Database admin password",
            "displayName": "Database admin password",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "DB_ADMIN_PASSWORD",
            "required": true
        },
        {
            "description": "JWS Admin User",
            "displayName": "JWS Admin Username",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "JWS_ADMIN_USERNAME",
            "required": true
        },
        {
            "description": "JWS Admin Password",
            "displayName": "JWS Admin Password",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "JWS_ADMIN_PASSWORD",
            "required": true
        },
        {
            "description": "GitHub trigger secret",
            "displayName": "Github Webhook Secret",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "GITHUB_WEBHOOK_SECRET",
            "required": true
        },
        {
            "description": "Generic build trigger secret",
            "displayName": "Generic Webhook Secret",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "GENERIC_WEBHOOK_SECRET",
            "required": true
        },
        {
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "displayName": "ImageStream Namespace",
            "name": "IMAGE_STREAM_NAMESPACE",
            "required": true,
            "value": "openshift"
        },
        {
            "description": "Maven mirror to use for S2I builds",
            "displayName": "Maven mirror URL",
            "name": "MAVEN_MIRROR_URL"
        },
        {
            "description": "List of directories from which archives will be copied into the deployment folder. If unspecified, all archives in /target will be copied.",
            "name": "ARTIFACT_DIR"
        },
        {
         "name": "IDENTIFIER",
         "description": "Number to append to the name of resources",
         "value": "1"
        }
    ]
}
